#include <limits.h>
#include <stdio.h>
#include <iostream>
using namespace std;

void interchange(int *a, int *b) 
{
   int t;
   t = *a;
   *a = *b;
   *b = t;
}

int divide(int a[], int low, int high) 
{
   int pivot, index, i;
   index = low;
   pivot = high;
   for(i = low; i < high; i++) 
   {
      if(a[i] < a[pivot]) 
      {
         interchange(&a[i], &a[index]);
         index++;
      }
   }
   interchange(&a[pivot], &a[index]);
   return index;
}

int pivot_partition(int a[], int low, int high) 
{
   int pvt, n, temp;
   n = rand();
   pvt = low + n%(high-low+1);
   interchange(&a[high], &a[pvt]);
   return divide(a, low, high);
}

int QuickSort(int a[], int low, int high) 
{
   int pindex;
   if(low < high) 
   {
      pindex = pivot_partition(a, low, high);
      QuickSort(a, low, pindex-1);
      QuickSort(a, pindex+1, high);
   }
   return 0;
}


int main() 
{
   int n, i;
   cout<<"\nEnter the number of data element to be sorted: ";
   cin>>n;
   int arr[n];
   for(i = 0; i < n; i++) 
   {
      cout<<"Enter element "<<i+1<<": ";
      cin>>arr[i];
   }
   QuickSort(arr, 0, n-1);
   cout<<"\nSorted Data ";
   for (i = 0; i < n; i++)
      cout<<" -> "<<arr[i];
   return 0;
}